# -*- coding: utf-8 -*-
"""Projeto utilizando arquivo leitura CSV

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mYhdt9Pw7q4Y-7-kB5I0k0kShyZDB8EZ
"""

from pyngrok import ngrok

# Conectar ngrok √† porta 8501 (padr√£o do Streamlit)
public_url = ngrok.connect(8501)
print(f"Acesse seu app aqui: {public_url}")

# Rodar o app Streamlit
!streamlit run app.py &>/dev/null &

from pyngrok import conf

# Insira seu token aqui entre aspas
authtoken = "2wP9gPg9KowTmVDoZhtHUYUIEF4_5kLDA15BXu6hLeL3Lcc5q"

conf.get_default().auth_token = authtoken

#============== C√≥digo Streamlit para carregar grande banco de Dados =======================================#

# app.py
import streamlit as st
import pandas as pd
import plotly.express as px

st.set_page_config(page_title="Dashboard Cidades Produtivas", layout="wide")

# Carregar dados
@st.cache_data
def carregar_dados():
    return pd.read_csv("/content/cidades_producao_brasil.csv")

df = carregar_dados()

# T√≠tulo
st.title("üìä Dashboard das 200 Cidades Mais Produtivas do Brasil")

# Filtros
with st.sidebar:
    st.header("Filtros")
    cidades_selecionadas = st.multiselect("Escolha as cidades:", options=df["Cidade"].unique(), default=df["Cidade"].unique()[:10])
    temp_min, temp_max = st.slider("Temperatura M√©dia (¬∞C)", float(df["Temperatura M√©dia (¬∞C)"].min()), float(df["Temperatura M√©dia (¬∞C)"].max()), (20.0, 30.0))
    renda_min, renda_max = st.slider("Renda Per Capita (R$)", float(df["Renda Per Capita (R$)"].min()), float(df["Renda Per Capita (R$)"].max()), (1000.0, 4000.0))
    educ_min = st.slider("√çndice Educacional m√≠nimo", 0.3, 1.0, 0.5)

# Aplicar filtros
df_filtrado = df[
    (df["Cidade"].isin(cidades_selecionadas)) &
    (df["Temperatura M√©dia (¬∞C)"].between(temp_min, temp_max)) &
    (df["Renda Per Capita (R$)"].between(renda_min, renda_max)) &
    (df["√çndice Educacional"] >= educ_min)
]

# KPIs
col1, col2, col3 = st.columns(3)
col1.metric("Cidades Selecionadas", len(df_filtrado))
col2.metric("M√©dia Renda Per Capita", f"R$ {df_filtrado['Renda Per Capita (R$)'].mean():,.2f}")
col3.metric("M√©dia √çndice Sa√∫de", f"{df_filtrado['√çndice de Sa√∫de'].mean():.2f}")

st.markdown("---")

# Gr√°ficos
col4, col5 = st.columns(2)

with col4:
    fig1 = px.histogram(df_filtrado, x="Temperatura M√©dia (¬∞C)", nbins=20, title="Distribui√ß√£o de Temperaturas")
    st.plotly_chart(fig1, use_container_width=True)

with col5:
    fig2 = px.scatter(df_filtrado, x="Renda Per Capita (R$)", y="√çndice de Sa√∫de", size="N√∫mero de Habitantes",
                      color="Cidade", title="Renda vs Sa√∫de")
    st.plotly_chart(fig2, use_container_width=True)

st.markdown("### Dados Filtrados")
st.dataframe(df_filtrado, use_container_width=True)

from pyngrok import ngrok
public_url = ngrok.connect(8501)
print(public_url)
